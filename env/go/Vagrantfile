Vagrant.configure(2) do |config|
  config.vm.box = "centos/7"

  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # Map out host machine port to vm port 
  #  config.vm.network "forwarded_port", guest: 443, host: 4430
  #  config.vm.network "forwarded_port", guest: 8080, host: 8080

  # App common http access
  #config.vm.network "forwarded_port", guest: 8888, host: 8888

  # Openvpn access
  #config.vm.network "forwarded_port", guest: 1194, host: 1194 

  # Create a private network, which allows host-only access to the machine
  ################## NFS requirs host network ################
  config.vm.network "private_network", type: "dhcp"


  ########################################################################
  ############# Change your host mapping directories here  ###############

  # Mac
  config.vm.synced_folder "~/Documents/vagrant-share/", "/home/vagrant/mac", type: "nfs", create: true 

  # Ansible provision folder
  # config.vm.synced_folder ".", "/home/vagrant/sync"

  ########################################################################

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
      vb.memory = "2048"
      vb.cpus = 1
  end

  # Provision script
  config.vm.provision "shell", name: "core", path: "../../provisioners/shell/core.sh"
  config.vm.provision "shell", name: "vim", path: "../../provisioners/shell/vim.sh"
  config.vm.provision "shell", name: "go", path: "../../provisioners/shell/go.sh"
end
